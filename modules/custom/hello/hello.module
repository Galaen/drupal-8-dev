<?php


/**
 * Implements hook_help().
 */
/*
function hello_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hello':
      $output = 'hello';
//      $output .= '<h3>' . t('About') . '</h3>';
//      $output .= '<p>' . t('The Admin Toolbar module enhances the <a href=":toolbar">Toolbar</a> module by providing fast access to all the administrative links at the top of your site. Admin Toolbar remains a very "lightweight" module by closely integrating with all Toolbar functionality. It can be used in conjunction with all the sub or complimentary modules, listed on <a href="https://www.drupal.org/project/admin_toolbar">Admin Toolbar</a>, for quick access to system commands such as Flush all caches, <a href=":automated_cron">Run cron</a>, Run Updates, etc... For more information, see <a href=":admin_toolbar_documentation">the online documentation for the Admin Toolbar module</a>.', array(':toolbar' => Url::fromRoute('help.page', array('name' => 'toolbar'))->toString(), ':automated_cron' => (\Drupal::moduleHandler()->moduleExists('automated_cron')) ? Url::fromRoute('help.page', array('name' => 'automated_cron'))->toString() : '#', ':admin_toolbar_documentation' => 'https://www.drupal.org/node/2713693')) . '</p>';
//      $output .= '<h3>' . t('Uses') . '</h3>';
//      $output .= '<p>' . t('The Admin Toolbar greatly improves the user experience for those who regularly interact with the Drupal Toolbar by providing fast, full access to all links in the Drupal Toolbar without having to click to get there.') . '</p>';

      return $output;
  }
}
*/

function hello_cron() {
    drupal_set_message(t("Hello module cron task started"), 'error');
}

function hello_user_login($account) {
//    $account = \Drupal::currentUser();
    drupal_set_message(t("Bienvenue mon gars %user", array('%user' => $account->getUsername())), 'warning');
}

function hello_entity_update($entity) {
//  kint($entity);

  $database = \Drupal::database();

  $database->insert('hello_node_history')->fields(
    array(
      'nid' => $entity->id(),
      'uid' => $entity->getRevisionUserId(),
      'update_time' => $entity->getChangedTime()
    )
  )->execute();



  //exit();

}